package com.fh.taolijie.dao.mapper;

import com.fh.taolijie.domain.JobPostModel;
import org.apache.ibatis.annotations.Param;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.annotation.Caching;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface JobPostModelMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @Caching(
            evict = {
                    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0)", beforeInvocation = true),
                    @CacheEvict(value = "jobPostListCache", allEntries = true, beforeInvocation = true)
            }

    )
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @CacheEvict(value = "jobPostListCache", allEntries = true, beforeInvocation = true)
    int insert(JobPostModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @CacheEvict(value = "jobPostListCache", allEntries = true, beforeInvocation = true)
    int insertSelective(JobPostModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @Cacheable(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0)")
    JobPostModel selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @Caching(
            evict = {
                    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0.id)", beforeInvocation = true),
                    @CacheEvict(value = "jobPostListCache", allEntries = true, beforeInvocation = true)
            }

    )
    int updateByPrimaryKeySelective(JobPostModel record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table job_post
     *
     * @mbggenerated
     */
    @Caching(
            evict = {
                    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0.id)", beforeInvocation = true),
                    @CacheEvict(value = "jobPostListCache", allEntries = true, beforeInvocation = true)
            }

    )
    int updateByPrimaryKey(JobPostModel record);

    @Cacheable(value = "jobPostListCache", key = "'JobPost:'.concat(#root.methodName).concat(':').concat(#p0).concat(':').concat(#p1)")
    List<JobPostModel> getAll(@Param("pageNumber") int pageNumber, @Param("pageSize") int pageSize);

    List<JobPostModel> getInBatch(List<Integer> idList);

    @Cacheable(value = "jobPostListCache", key = "'JobPost:'.concat(#root.methodName).concat(':').concat(#p0).concat(':').concat(#p1)")
    List<JobPostModel> getByComplaint(@Param("pageNumber") int pageNumber, @Param("pageSize") int pageSize);


    List<JobPostModel> findBy(JobPostModel model);

    List<JobPostModel> searchBy(JobPostModel model);

    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0)", beforeInvocation = true)
    void complaint(Integer postId);

    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0)", beforeInvocation = true)
    void increasePageView(Integer postId);

    @CacheEvict(value = "jobPostCache", key = "'JobPost:id:'.concat(#p0)", beforeInvocation = true)
    void increaseLike(Integer postId);

    void postResume(Integer resumeId, Integer jobPostId, Integer memberId);
}