<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:cache="http://www.springframework.org/schema/cache"
             xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
        >
    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!--<import resource="redis-config.xml" />-->

    <!-- Enables the Spring MVC @Controller programming model -->
    <cache:annotation-driven />
    <mvc:annotation-driven />

    <!--管理员后台资源路径-->
    <mvc:resources mapping="/admin/**" location="/WEB-INF/views/pc/assets/admin/" />
    <!--前台资源-->
    <mvc:resources mapping="/images/**" location="/WEB-INF/views/pc/assets/images/" />
    <mvc:resources mapping="/scripts/**" location="/WEB-INF/views/pc/assets/scripts/" />
    <mvc:resources mapping="/styles/**" location="/WEB-INF/views/pc/assets/styles/" />
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/views/pc/assets/fonts/"/>
    <mvc:resources mapping="/about/**" location="/WEB-INF/views/pc/assets/about/"/>



    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>



    <!--<jee:jndi-lookup id="dataSource" jndi-name="java:jboss/datasources/taolijie"-->
                     <!--resource-ref="true" />-->
    <!--数据库连接采用jdbc驱动-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/taolijie?characterEncoding=utf-8" />
        <property name="username" value="root" />
    <property name="password" value="111111" />
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- myBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- myBatis配置 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.fh.taolijie.dao.mapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 文件上传 -->
    <bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="5242880" /> <!-- 5M -->
    </bean>

    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/404</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven />


    <context:component-scan base-package="com.fh.taolijie" />
    <!--<context:component-scan base-package="com.fh.taolijie.controller com.fh.taolijie.service com.fh.taolijie.interceptor com.fh.taolijie.dao" />-->


    <!-- Email -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.126.com"/>
        <property name="port" value="25"/>
        <property name="username" value="wfc5582563@126.com"/>
        <property name="password" value="wang700327"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**" />
            <bean class="com.fh.taolijie.interceptor.CommonInterceptor"></bean>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>

    <bean id="cacheFilter" class="com.fh.taolijie.servlet.CacheFilter" />



</beans>
